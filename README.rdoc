I just follow the procedure what I saw in website http://guides.rubyonrails.org/action_mailer_basics.html

1.create a new project

  rails new mails

2.Create the Mailer

  rails generate mailer UserMailer

3.Edit the Mailer
Mailers are very similar to Rails controllers.

app/mailers/user_mailer.rb 

  class UserMailer < ActionMailer::Base
    default from: 'notifications@example.com'
    def welcome_email(user)
      @user = user
      @url  = 'http://example.com/login'
      mail(to: @user.email, subject: 'Welcome to My Awesome Site')
    end
  end

4.Create a Mailer View
Create a file called welcome_email.html.erb in app/views/user_mailer/.

  <!DOCTYPE html>
  <html>
    <head>
      <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
    </head>
    <body>
      <h1>Welcome to example.com, <%= @user.name %></h1>
     <p>
        You have successfully signed up to example.com,
        your username is: <%= @user.login %>.<br/>
      </p>
      <p>
        To login to the site, just follow this link: <%= @url %>.
      </p>
      <p>Thanks for joining and have a great day!</p>
    </body>
  </html>

5.Calling the Mailer

  rails generate scaffold user name email login
  rake db:migrate

Replace this code in UsesController instead of create action

  def create
    @user = User.new(params[:user])
 
    respond_to do |format|
      if @user.save
        # Tell the UserMailer to send a welcome Email after save
        UserMailer.welcome_email(@user).deliver
 
        format.html { redirect_to(@user, notice: 'User was successfully created.') }
        format.json { render json: @user, status: :created, location: @user }
      else
        format.html { render action: 'new' }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  
  
6.Add or set the code in environment production.rb or developement.rb file

if those config was exit then just change the value else add the line

  # ActionMailer Config
  config.action_mailer.default_url_options = { :host => 'localhost:3000' }
  config.action_mailer.delivery_method = :smtp
  # change to true to allow email to be sent during development
  config.action_mailer.perform_deliveries = true
  config.action_mailer.raise_delivery_errors = true
  config.action_mailer.default :charset => "utf-8"
  
7. Set your SMTP setting. 
You can configu your smtp as your wish for who provider best for you. Here I configure GMAIL and MANDEILL

  config.action_mailer.smtp_settings = {
    address: "smtp.gmail.com",
    port: 587,
    domain: ENV["DOMAIN_NAME"],
    authentication: "plain",
    enable_starttls_auto: true,
    user_name: "gmail email-id",
    password: "gmail password"
  }

  config.action_mailer.smtp_settings = {
    :address   => "smtp.mandrillapp.com",
    :port      => 587,
    :enable_starttls_auto => true,
    :user_name => "mandrill username",
    :password  => "mandrill API-KEY",
    :authentication => 'login',
    :domain => ENV["DOMAIN_NAME"]
  }

Here set your Email and password for user_name: and password:
  
Vist here "http://localhost:3000/users" and create a user. User will get a mail after created successfully. hooo :)

"!https://codeship.com/projects/f18c5730-cc5b-0132-01ab-7a3494c6b360/status?branch=master!":https://codeship.com/projects/76009

{<img alt="Status?branch=master" src="https://codeship.com/projects/f18c5730-cc5b-0132-01ab-7a3494c6b360/status?branch=master" />}[https://codeship.com/projects/76009]

[ ![Codeship Status for sselvamani22/send_email](https://codeship.com/projects/f18c5730-cc5b-0132-01ab-7a3494c6b360/status?branch=master)](https://codeship.com/projects/76009)
